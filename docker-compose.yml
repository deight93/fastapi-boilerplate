services:
  app:
    container_name: api-server
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "alembic upgrade head && fastapi dev app/main.py --host 0.0.0.0 --port 8000"
    working_dir: /app
    volumes:
      - ./app:/app/app
    ports:
      - "8000:8000"
    depends_on:
      postgresql-db:
        condition: service_healthy
      redis-db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - fastapi-boilerplate-network

  postgresql-db:
    container_name: postgresql-db
    image: postgres:16-alpine
    volumes:
      - postgresql-data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - fastapi-boilerplate-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 3s
      retries: 5


  redis-db:
    container_name: redis-db
    image: redis:6.0-alpine
    env_file:
      - .env
    restart: always
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    ports:
      - "6379:6379"
    networks:
      - fastapi-boilerplate-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgresql-data:

networks:
  fastapi-boilerplate-network:
